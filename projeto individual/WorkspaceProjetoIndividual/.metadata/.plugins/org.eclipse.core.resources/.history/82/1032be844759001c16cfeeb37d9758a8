package br.com.biblioteca.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonObject;

import br.com.biblioteca.jdbcinterface.CategoriaDAO;
import br.com.biblioteca.jdbcinterface.FuncionarioDAO;
import br.com.biblioteca.jdbcinterface.LeitorDAO;
import br.com.biblioteca.modelo.Categoria;
import br.com.biblioteca.modelo.Funcionario;
import br.com.biblioteca.modelo.Leitor;
import br.com.biblioteca.modelo.Livro;

public class JDBCLeitorDAO implements LeitorDAO {

	private Connection conexao;
	
	public JDBCLeitorDAO(Connection conexao) {
		this.conexao = conexao;
	}
	
	public boolean inserirEndereco(Leitor leitor) {
		
		String comandoEnde = "INSERT INTO endereco (id, cidade, bairro, rua, numero, cep) VALUES (?,?,?,?,?,?)";
		PreparedStatement e;
		
		try {
			
			e = this.conexao.prepareStatement(comandoEnde);
			
			e.setInt(1, leitor.getId_endereco());
			e.setString(2, leitor.getCidade());
			e.setString(3, leitor.getBairro());
			e.setString(4, leitor.getRua());
			e.setInt(5, leitor.getNumero());
			e.setInt(6, leitor.getCep());

						
			e.execute();
			
			System.out.println(leitor.getId_endereco());
			System.out.println(leitor.getCidade());
			System.out.println(leitor.getBairro());
			System.out.println(leitor.getRua());
			System.out.println(leitor.getNumero());
			System.out.println(leitor.getCep());
			
			
		}catch (SQLException ex){
			ex.printStackTrace();
			return false;
		}
		return true;
	}
	
	public int buscarEndereco(Leitor livro) {
		String comando = "SELECT id FROM endereco WHERE endereco.cep = "+livro.getCep();
		int idEndereco = 0;
				
		try {
						
			Statement stmt = conexao.createStatement();
			ResultSet rs =stmt.executeQuery(comando);
			while (rs.next()) {
				idEndereco = rs.getInt("id");
			}
						
		}catch (SQLException e){
			e.printStackTrace();
			return idEndereco;
		}
		return idEndereco;
	}
	
	public boolean inserirLeitor(Leitor leitor, int retornoIdEndereco) {
		String comandoFunc = "INSERT INTO leitor (id, nome, cpf, rg, telefone_principal, telefone_secundario, data_nasc, nome_mae, foto, email, endereco_id) VALUES (?,?,?,?,?,?,?,?,?,?,?)";
		PreparedStatement c;
				
		String idEndereco = new Gson().toJson(retornoIdEndereco);
				
		try {
						
			
			c = this.conexao.prepareStatement(comandoFunc);
			
			c.setInt(1, leitor.getId());
			c.setString(2, leitor.getNome());
			c.setString(3, leitor.getCpf());
			c.setString(4, leitor.getRg());
			c.setString(5, leitor.getTelefone_principal());
			c.setString(6, leitor.getTelefone_sec());
			c.setString(7, leitor.getData_nasc());
			c.setString(8, leitor.getNomeMae());
			c.setString(9, leitor.getFoto());
			c.setString(10, leitor.getEmail());
			c.setString(11, idEndereco);

						
			c.execute();
			
			System.out.println(leitor.getId());
			System.out.println(leitor.getNome());
			System.out.println(leitor.getCpf());
			System.out.println(leitor.getRg());
			System.out.println(leitor.getTelefone_principal());
			System.out.println(leitor.getTelefone_sec());
			System.out.println(leitor.getData_nasc());
			System.out.println(leitor.getEmail());
			System.out.println(leitor.getId_endereco());

			
			
		}catch (SQLException ex){
			ex.printStackTrace();
			return false;
		}
		return true;
	}
	
	public List<Leitor> buscar(String nome){
		
		String comando = "SELECT * FROM funcionario ";
		
		if(!nome.equals("")) {
			comando += "WHERE nome LIKE '%" + nome + "%' ";
		}

		
		List<Funcionario> listFuncionario = new ArrayList<Funcionario>();
		
		Funcionario funcionario = null;
		
		try {
			
			Statement stmt = conexao.createStatement();
			
			ResultSet rs = stmt.executeQuery(comando);
			
			while(rs.next()) {
								
				funcionario = new Funcionario();
				
				int id = rs.getInt("id");
				String login = rs.getString("login");
				String senha = rs.getString("senha");
				String nomeFunc = rs.getString("nome");
				String cpf = rs.getString("cpf");
				String rg = rs.getString("rg");
				String telefone_principal = rs.getString("telefone_principal");
				String telefone_sec = rs.getString("telefone_secundario");
				String data_nasc = rs.getString("data_nasc");
				String email = rs.getString("email");
				int cargo = rs.getInt("cargo");
				int id_endereco = rs.getInt("endereco_id");

				
				funcionario.setId(id);
				funcionario.setLogin(login);;
				funcionario.setSenha(senha);;
				funcionario.setNome(nomeFunc);;
				funcionario.setCpf(cpf);;
				funcionario.setRg(rg);;
				funcionario.setTelefone_principal(telefone_principal);;
				funcionario.setTelefone_sec(telefone_sec);;
				funcionario.setData_nasc(data_nasc);;
				funcionario.setEmail(email);;
				funcionario.setCargo(cargo);;
				funcionario.setId_endereco(id_endereco);

				
				listFuncionario.add(funcionario);
			}
			
		}catch (Exception ex) {
			ex.printStackTrace();
		}
		return listFuncionario;
	}
		
}
