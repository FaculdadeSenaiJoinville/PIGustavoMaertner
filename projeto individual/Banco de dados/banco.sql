use mydb;


-- MySQL Script generated by MySQL Workbench
-- Mon Nov  8 19:31:23 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`endereco` (
  `id` INT ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Id do endereço',
  `cidade` VARCHAR(45) NOT NULL COMMENT 'Cidade dos usuários (funcionário/leitor)',
  `bairro` VARCHAR(45) NOT NULL COMMENT 'Bairro do usuário (funcionário/leitor)',
  `rua` VARCHAR(45) NOT NULL COMMENT 'Rua do usuário (funcionário/leitor)',
  `numero` INT NOT NULL COMMENT 'Número do usuário (funcionário/leitor)',
  `cep` INT NOT NULL COMMENT 'Cep do usuário (funcionário/leitor)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`funcionario` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id do funcionário',
  `login` VARCHAR(20) NOT NULL COMMENT 'Login do funcionário (Usado para acessar o sistema)',
  `senha` CHAR(32) NOT NULL COMMENT 'Senha do funcionário (Usado para acessar o sistema)',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Nome do funcionário',
  `cpf` BIGINT(11) ZEROFILL NOT NULL COMMENT 'cpf do funcionário',
  `rg` VARCHAR(10) NOT NULL COMMENT 'Rg do funcionário',
  `telefone_principal` BIGINT(13) NOT NULL COMMENT 'Telefone principal do funcionário',
  `telefone_secundario` BIGINT(13) NULL COMMENT 'Telefone secundário do funcionário',
  `data_nasc` DATE NOT NULL COMMENT 'Data de nascimento do funcionário',
  `email` VARCHAR(100) NOT NULL COMMENT 'Email do funcionário',
  `cargo` INT NOT NULL COMMENT 'Cargo do usuário\n0 - Funcionário\n1 - Gerente',
  `endereco_id` INT ZEROFILL NOT NULL COMMENT 'Chave estrangeira do endereço do funcionário',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_funcionario_endereco1_idx` (`endereco_id` ASC),
  CONSTRAINT `fk_funcionario_endereco1`
    FOREIGN KEY (`endereco_id`)
    REFERENCES `mydb`.`endereco` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`leitor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`leitor` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id do leitor',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Nome do leitor',
  `cpf` BIGINT(11) ZEROFILL NOT NULL COMMENT 'cpf  do leitor',
  `rg` VARCHAR(10) NOT NULL COMMENT 'rg do leitor',
  `telefone_principal` BIGINT(13) NOT NULL COMMENT 'Telefone principal do leitor',
  `telefone_secundario` BIGINT(13) NULL COMMENT 'Telefone secundário  do leitor',
  `data_nasc` DATE NOT NULL COMMENT 'Data de nascimento do leitor',
  `nome_mae` VARCHAR(45) NOT NULL COMMENT 'Nome da mãe do leitor',
  `foto` BLOB NULL COMMENT 'Foto do leitor',
  `email` VARCHAR(100) NOT NULL COMMENT 'E-mail do leitor',
  `endereco_id` INT ZEROFILL NOT NULL COMMENT 'Chave estrangeira do endereco do leitor',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_leitor_endereco1_idx` (`endereco_id` ASC),
  CONSTRAINT `fk_leitor_endereco1`
    FOREIGN KEY (`endereco_id`)
    REFERENCES `mydb`.`endereco` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`categoria` (
  `id` INT ZEROFILL AUTO_INCREMENT NOT NULL COMMENT 'Id da categoria do livro\n',
  `nome` VARCHAR(15) NOT NULL COMMENT 'Nome da categoria do Livro\n',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`livro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`livro` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id do livro',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Nome do Livro',
  `ano` DATE NOT NULL COMMENT 'Ano de lançamento do livro',
  `autor` VARCHAR(45) NOT NULL COMMENT 'Autor do livro',
  `revisao` INT NOT NULL COMMENT 'Revisão do exemplar do livro(Versão)',
  `status_fisico` INT NOT NULL COMMENT 'É referente ao status da integridade física do livro\n0 - Disponível\n1 - Estragado\n2 - Em concerto',
  `categoria_id` INT ZEROFILL NOT NULL COMMENT 'Chave estrangeira da categoria do livro',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_livro_categoria_idx` (`categoria_id` ASC),
  CONSTRAINT `fk_livro_categoria`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `mydb`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`emprestimo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`emprestimo` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id do empréstimo',
  `data` DATE NOT NULL COMMENT 'Data em que o empréstimo foi realizado',
  `status` INT NOT NULL COMMENT 'Status referente ao empréstimo\n0 - Em aberto\n1 - Finalizado',
  `quant_renovacoes` INT NOT NULL COMMENT 'Flag referente a quantidade de vezes que o empréstimo já foi renovado (Limite de 3)',
  `data_final` DATE NOT NULL COMMENT 'Data prevista de fim, irá sofrer alteração caso o leitor decida renovar o empréstimo',
  `leitor_id` INT NOT NULL COMMENT 'Chave estrangeira do leitor\n',
  PRIMARY KEY (`id`),
  INDEX `fk_emprestimo_leitor1_idx` (`leitor_id` ASC),
  CONSTRAINT `fk_emprestimo_leitor1`
    FOREIGN KEY (`leitor_id`)
    REFERENCES `mydb`.`leitor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`multa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`multa` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id da multa',
  `valor` DECIMAL(6,2) NOT NULL COMMENT 'Valor a ser pago da multa',
  `status` INT NOT NULL COMMENT 'Status da multa\n0 - Em atraso\n1 - Paga\n',
  `data_gerada` DATE NOT NULL COMMENT 'Campo referente a data em que a multa foi gerada',
  `emprestimo_id` INT NOT NULL COMMENT 'Chave estrangeira referente ao empréstimo\n',
  PRIMARY KEY (`id`),
  INDEX `fk_multa_emprestimo1_idx` (`emprestimo_id` ASC),
  CONSTRAINT `fk_multa_emprestimo1`
    FOREIGN KEY (`emprestimo_id`)
    REFERENCES `mydb`.`emprestimo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`emprestimo_has_livro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`emprestimo_has_livro` (
  `emprestimo_id` INT NOT NULL COMMENT 'Chave estrangeira do empréstimo',
  `livro_id` INT NOT NULL COMMENT 'Chave estrangeira do livro',
  `status_livro` INT NOT NULL COMMENT 'Status referente ao livro\n(Cada livro dentro de um empréstimo pode ter um status diferente)\n0 - A devolver\n1 - Devolvido',
  INDEX `fk_emprestimo_has_livro_livro1_idx` (`livro_id` ASC),
  INDEX `fk_emprestimo_has_livro_emprestimo1_idx` (`emprestimo_id` ASC),
  CONSTRAINT `fk_emprestimo_has_livro_emprestimo1`
    FOREIGN KEY (`emprestimo_id`)
    REFERENCES `mydb`.`emprestimo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_emprestimo_has_livro_livro1`
    FOREIGN KEY (`livro_id`)
    REFERENCES `mydb`.`livro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
